{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivoo Cumana\\\\OneDrive\\\\Documentos\\\\Micro procesadores\\\\proyecto\\\\Microprocesador\\\\frontend\\\\src\\\\pages\\\\Simulator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport CodeEditor from '../components/simulator/CodeEditor';\nimport InstructionsTable from '../components/simulator/InstructionsTable';\nimport ExecutionControls from '../components/simulator/ExecutionControls';\nimport RegisterTable from '../components/simulator/RegisterTable';\nimport MemoryTable from '../components/simulator/MemoryTable';\nimport { validateAssembler } from '../utils/assemblerValidator';\nimport { saveProgram, executeInstruction } from '../services/instructions';\nimport { getRegisters, getMemory } from '../services/memory';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulatorPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [code, setCode] = useState('');\n  const [instructions, setInstructions] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [registers, setRegisters] = useState([]);\n  const [memory, setMemory] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentLine, setCurrentLine] = useState(null);\n  const [highlightRegister, setHighlightRegister] = useState(null);\n  const [highlightMemory, setHighlightMemory] = useState(null);\n  const executionRef = useRef(null);\n  const nextInstructionRef = useRef(0);\n\n  // Cargar registros y memoria al iniciar\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const regs = await getRegisters();\n        const mem = await getMemory();\n        setRegisters(regs);\n        setMemory(mem);\n      }\n    };\n    fetchData();\n  }, [user]);\n\n  // Limpiar ejecución al desmontar\n  useEffect(() => {\n    return () => {\n      if (executionRef.current) {\n        clearInterval(executionRef.current);\n      }\n    };\n  }, []);\n  const handleAddInstruction = () => {\n    if (!code.trim()) return;\n    const validation = validateAssembler(code);\n    if (!validation.valid) {\n      setErrors(validation.errors);\n      return;\n    }\n    setErrors([]);\n    const newInstruction = {\n      id: Date.now(),\n      line: instructions.length + 1,\n      content: code.trim()\n    };\n    setInstructions([...instructions, newInstruction]);\n    setCode('');\n  };\n  const handleRemoveInstruction = id => {\n    setInstructions(instructions.filter(inst => inst.id !== id));\n  };\n  const handleClearInstructions = () => {\n    setInstructions([]);\n    stopExecution();\n  };\n  const executeSingleInstruction = async () => {\n    if (nextInstructionRef.current >= instructions.length) {\n      stopExecution();\n      return;\n    }\n    const instruction = instructions[nextInstructionRef.current];\n    setCurrentLine(instruction.line);\n    try {\n      const result = await executeInstruction(instruction.content);\n\n      // Actualizar estado con los nuevos valores\n      setRegisters(result.registers);\n      setMemory(result.memory);\n\n      // Destacar cambios\n      if (result.updatedRegister) {\n        setHighlightRegister(result.updatedRegister);\n        setTimeout(() => setHighlightRegister(null), 1000);\n      }\n      if (result.updatedMemory) {\n        setHighlightMemory(result.updatedMemory);\n        setTimeout(() => setHighlightMemory(null), 1000);\n      }\n      nextInstructionRef.current++;\n\n      // Si es la última instrucción, detener ejecución\n      if (nextInstructionRef.current >= instructions.length) {\n        stopExecution();\n      }\n    } catch (error) {\n      console.error(\"Error al ejecutar instrucción:\", error);\n      stopExecution();\n    }\n  };\n  const startExecution = () => {\n    if (instructions.length === 0) return;\n    setIsRunning(true);\n    nextInstructionRef.current = 0;\n    executionRef.current = setInterval(() => {\n      executeSingleInstruction();\n    }, 1000);\n  };\n  const stopExecution = () => {\n    if (executionRef.current) {\n      clearInterval(executionRef.current);\n      executionRef.current = null;\n    }\n    setIsRunning(false);\n  };\n  const handleStep = () => {\n    if (isRunning) return;\n    executeSingleInstruction();\n  };\n  const handleRun = () => {\n    if (isRunning) return;\n    startExecution();\n  };\n  const handlePause = () => {\n    stopExecution();\n  };\n  const handleReset = () => {\n    stopExecution();\n    setCurrentLine(null);\n    nextInstructionRef.current = 0;\n\n    // Restaurar registros y memoria a estado inicial\n    const fetchData = async () => {\n      const regs = await getRegisters();\n      const mem = await getMemory();\n      setRegisters(regs);\n      setMemory(mem);\n    };\n    fetchData();\n  };\n  const handleSaveProgram = async () => {\n    if (instructions.length === 0) {\n      alert('No hay instrucciones para guardar');\n      return;\n    }\n    try {\n      const program = instructions.map(inst => inst.content).join('\\n');\n      await saveProgram(program);\n      alert('Programa guardado exitosamente');\n    } catch (error) {\n      console.error(\"Error al guardar programa:\", error);\n      alert('Error al guardar el programa');\n    }\n  };\n  const handleExecuteAll = () => {\n    if (instructions.length === 0) return;\n\n    // Ejecutar todas las instrucciones de una vez\n    const executeAll = async () => {\n      stopExecution();\n      setCurrentLine(null);\n      nextInstructionRef.current = 0;\n      for (let i = 0; i < instructions.length; i++) {\n        const instruction = instructions[i];\n        setCurrentLine(instruction.line);\n        try {\n          const result = await executeInstruction(instruction.content);\n          setRegisters(result.registers);\n          setMemory(result.memory);\n\n          // Pequeña pausa para visualización\n          await new Promise(resolve => setTimeout(resolve, 300));\n        } catch (error) {\n          console.error(\"Error al ejecutar instrucción:\", error);\n          break;\n        }\n      }\n    };\n    executeAll();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Simulador de Instrucciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n          value: code,\n          onChange: setCode,\n          onAddInstruction: handleAddInstruction,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InstructionsTable, {\n          instructions: instructions,\n          onRemove: handleRemoveInstruction,\n          onExecute: handleExecuteAll,\n          onClear: handleClearInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveProgram,\n            className: \"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\",\n            children: \"Guardar Programa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ExecutionControls, {\n          onStep: handleStep,\n          onRun: handleRun,\n          onPause: handlePause,\n          onReset: handleReset,\n          isRunning: isRunning,\n          currentLine: currentLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(RegisterTable, {\n            registers: registers,\n            highlight: highlightRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MemoryTable, {\n            memory: memory,\n            highlight: highlightMemory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-4 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2\",\n            children: \"Instrucciones Soportadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-3 gap-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"MOV dest, src\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"LOAD reg, [addr]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"STORE [addr], reg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"ADD dest, src\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"SUB dest, src\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"MUL dest, src\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"DIV dest, src\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"CMP op1, op2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"JMP label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"JE label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"JNE label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"JG label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"JGE label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"JL label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-mono\",\n              children: \"JLE label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulatorPage, \"2U3KHNAA4DElWL5EX8MiWxWBqVs=\", false, function () {\n  return [useAuth];\n});\n_c = SimulatorPage;\nexport default SimulatorPage;\nvar _c;\n$RefreshReg$(_c, \"SimulatorPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CodeEditor","InstructionsTable","ExecutionControls","RegisterTable","MemoryTable","validateAssembler","saveProgram","executeInstruction","getRegisters","getMemory","useAuth","jsxDEV","_jsxDEV","SimulatorPage","_s","user","code","setCode","instructions","setInstructions","errors","setErrors","registers","setRegisters","memory","setMemory","isRunning","setIsRunning","currentLine","setCurrentLine","highlightRegister","setHighlightRegister","highlightMemory","setHighlightMemory","executionRef","nextInstructionRef","fetchData","regs","mem","current","clearInterval","handleAddInstruction","trim","validation","valid","newInstruction","id","Date","now","line","length","content","handleRemoveInstruction","filter","inst","handleClearInstructions","stopExecution","executeSingleInstruction","instruction","result","updatedRegister","setTimeout","updatedMemory","error","console","startExecution","setInterval","handleStep","handleRun","handlePause","handleReset","handleSaveProgram","alert","program","map","join","handleExecuteAll","executeAll","i","Promise","resolve","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onAddInstruction","onRemove","onExecute","onClear","onClick","onStep","onRun","onPause","onReset","highlight","_c","$RefreshReg$"],"sources":["C:/Users/ivoo Cumana/OneDrive/Documentos/Micro procesadores/proyecto/Microprocesador/frontend/src/pages/Simulator.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport CodeEditor from '../components/simulator/CodeEditor';\r\nimport InstructionsTable from '../components/simulator/InstructionsTable';\r\nimport ExecutionControls from '../components/simulator/ExecutionControls';\r\nimport RegisterTable from '../components/simulator/RegisterTable';\r\nimport MemoryTable from '../components/simulator/MemoryTable';\r\nimport { validateAssembler } from '../utils/assemblerValidator';\r\nimport { saveProgram, executeInstruction } from '../services/instructions';\r\nimport { getRegisters, getMemory } from '../services/memory';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface Instruction {\r\n  id: number;\r\n  line: number;\r\n  content: string;\r\n}\r\n\r\nconst SimulatorPage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [code, setCode] = useState('');\r\n  const [instructions, setInstructions] = useState<Instruction[]>([]);\r\n  const [errors, setErrors] = useState<{ line: number; message: string }[]>([]);\r\n  const [registers, setRegisters] = useState<any[]>([]);\r\n  const [memory, setMemory] = useState<any[]>([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState<number | null>(null);\r\n  const [highlightRegister, setHighlightRegister] = useState<string | null>(null);\r\n  const [highlightMemory, setHighlightMemory] = useState<number | null>(null);\r\n  const executionRef = useRef<NodeJS.Timeout | null>(null);\r\n  const nextInstructionRef = useRef(0);\r\n\r\n  // Cargar registros y memoria al iniciar\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (user) {\r\n        const regs = await getRegisters();\r\n        const mem = await getMemory();\r\n        setRegisters(regs);\r\n        setMemory(mem);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [user]);\r\n\r\n  // Limpiar ejecución al desmontar\r\n  useEffect(() => {\r\n    return () => {\r\n      if (executionRef.current) {\r\n        clearInterval(executionRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleAddInstruction = () => {\r\n    if (!code.trim()) return;\r\n    \r\n    const validation = validateAssembler(code);\r\n    if (!validation.valid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setErrors([]);\r\n    \r\n    const newInstruction = {\r\n      id: Date.now(),\r\n      line: instructions.length + 1,\r\n      content: code.trim()\r\n    };\r\n    \r\n    setInstructions([...instructions, newInstruction]);\r\n    setCode('');\r\n  };\r\n\r\n  const handleRemoveInstruction = (id: number) => {\r\n    setInstructions(instructions.filter(inst => inst.id !== id));\r\n  };\r\n\r\n  const handleClearInstructions = () => {\r\n    setInstructions([]);\r\n    stopExecution();\r\n  };\r\n\r\n  const executeSingleInstruction = async () => {\r\n    if (nextInstructionRef.current >= instructions.length) {\r\n      stopExecution();\r\n      return;\r\n    }\r\n    \r\n    const instruction = instructions[nextInstructionRef.current];\r\n    setCurrentLine(instruction.line);\r\n    \r\n    try {\r\n      const result = await executeInstruction(instruction.content);\r\n      \r\n      // Actualizar estado con los nuevos valores\r\n      setRegisters(result.registers);\r\n      setMemory(result.memory);\r\n      \r\n      // Destacar cambios\r\n      if (result.updatedRegister) {\r\n        setHighlightRegister(result.updatedRegister);\r\n        setTimeout(() => setHighlightRegister(null), 1000);\r\n      }\r\n      if (result.updatedMemory) {\r\n        setHighlightMemory(result.updatedMemory);\r\n        setTimeout(() => setHighlightMemory(null), 1000);\r\n      }\r\n      \r\n      nextInstructionRef.current++;\r\n      \r\n      // Si es la última instrucción, detener ejecución\r\n      if (nextInstructionRef.current >= instructions.length) {\r\n        stopExecution();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al ejecutar instrucción:\", error);\r\n      stopExecution();\r\n    }\r\n  };\r\n\r\n  const startExecution = () => {\r\n    if (instructions.length === 0) return;\r\n    \r\n    setIsRunning(true);\r\n    nextInstructionRef.current = 0;\r\n    \r\n    executionRef.current = setInterval(() => {\r\n      executeSingleInstruction();\r\n    }, 1000);\r\n  };\r\n\r\n  const stopExecution = () => {\r\n    if (executionRef.current) {\r\n      clearInterval(executionRef.current);\r\n      executionRef.current = null;\r\n    }\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const handleStep = () => {\r\n    if (isRunning) return;\r\n    executeSingleInstruction();\r\n  };\r\n\r\n  const handleRun = () => {\r\n    if (isRunning) return;\r\n    startExecution();\r\n  };\r\n\r\n  const handlePause = () => {\r\n    stopExecution();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    stopExecution();\r\n    setCurrentLine(null);\r\n    nextInstructionRef.current = 0;\r\n    \r\n    // Restaurar registros y memoria a estado inicial\r\n    const fetchData = async () => {\r\n      const regs = await getRegisters();\r\n      const mem = await getMemory();\r\n      setRegisters(regs);\r\n      setMemory(mem);\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  const handleSaveProgram = async () => {\r\n    if (instructions.length === 0) {\r\n      alert('No hay instrucciones para guardar');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const program = instructions.map(inst => inst.content).join('\\n');\r\n      await saveProgram(program);\r\n      alert('Programa guardado exitosamente');\r\n    } catch (error) {\r\n      console.error(\"Error al guardar programa:\", error);\r\n      alert('Error al guardar el programa');\r\n    }\r\n  };\r\n\r\n  const handleExecuteAll = () => {\r\n    if (instructions.length === 0) return;\r\n    \r\n    // Ejecutar todas las instrucciones de una vez\r\n    const executeAll = async () => {\r\n      stopExecution();\r\n      setCurrentLine(null);\r\n      nextInstructionRef.current = 0;\r\n      \r\n      for (let i = 0; i < instructions.length; i++) {\r\n        const instruction = instructions[i];\r\n        setCurrentLine(instruction.line);\r\n        \r\n        try {\r\n          const result = await executeInstruction(instruction.content);\r\n          setRegisters(result.registers);\r\n          setMemory(result.memory);\r\n          \r\n          // Pequeña pausa para visualización\r\n          await new Promise(resolve => setTimeout(resolve, 300));\r\n        } catch (error) {\r\n          console.error(\"Error al ejecutar instrucción:\", error);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n    \r\n    executeAll();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Simulador de Instrucciones</h2>\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        <div>\r\n          <CodeEditor \r\n            value={code} \r\n            onChange={setCode} \r\n            onAddInstruction={handleAddInstruction}\r\n            errors={errors}\r\n          />\r\n          \r\n          <InstructionsTable \r\n            instructions={instructions} \r\n            onRemove={handleRemoveInstruction}\r\n            onExecute={handleExecuteAll}\r\n            onClear={handleClearInstructions}\r\n          />\r\n          \r\n          <div className=\"flex justify-end\">\r\n            <button \r\n              onClick={handleSaveProgram}\r\n              className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\"\r\n            >\r\n              Guardar Programa\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <ExecutionControls \r\n            onStep={handleStep}\r\n            onRun={handleRun}\r\n            onPause={handlePause}\r\n            onReset={handleReset}\r\n            isRunning={isRunning}\r\n            currentLine={currentLine}\r\n          />\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n            <RegisterTable \r\n              registers={registers} \r\n              highlight={highlightRegister}\r\n            />\r\n            <MemoryTable \r\n              memory={memory} \r\n              highlight={highlightMemory}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"bg-gray-50 p-4 rounded\">\r\n            <h3 className=\"font-semibold mb-2\">Instrucciones Soportadas</h3>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 text-sm\">\r\n              <div className=\"font-mono\">MOV dest, src</div>\r\n              <div className=\"font-mono\">LOAD reg, [addr]</div>\r\n              <div className=\"font-mono\">STORE [addr], reg</div>\r\n              <div className=\"font-mono\">ADD dest, src</div>\r\n              <div className=\"font-mono\">SUB dest, src</div>\r\n              <div className=\"font-mono\">MUL dest, src</div>\r\n              <div className=\"font-mono\">DIV dest, src</div>\r\n              <div className=\"font-mono\">CMP op1, op2</div>\r\n              <div className=\"font-mono\">JMP label</div>\r\n              <div className=\"font-mono\">JE label</div>\r\n              <div className=\"font-mono\">JNE label</div>\r\n              <div className=\"font-mono\">JG label</div>\r\n              <div className=\"font-mono\">JGE label</div>\r\n              <div className=\"font-mono\">JL label</div>\r\n              <div className=\"font-mono\">JLE label</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulatorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}