{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jdlongart15\\\\ReactProjects\\\\simulador_microprocesador\\\\frontend\\\\src\\\\pages\\\\InstruccionesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport InstruccionList from '../components/InstruccionList';\nimport InstruccionForm from '../components/InstruccionForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstruccionesPage = () => {\n  _s();\n  const [instrucciones, setInstrucciones] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchInstrucciones = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/instrucciones');\n        setInstrucciones(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching instrucciones:', error);\n        setLoading(false);\n      }\n    };\n    fetchInstrucciones();\n  }, []);\n  const handleAddInstruccion = async instruccion => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/instrucciones', instruccion);\n      setInstrucciones([...instrucciones, response.data]);\n    } catch (error) {\n      console.error('Error adding instruccion:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Administrar Instrucciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InstruccionForm, {\n      onSubmit: handleAddInstruccion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InstruccionList, {\n      instrucciones: instrucciones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(InstruccionesPage, \"9il/qlbitdiWmTDGhctpdaO9RIg=\");\n_c = InstruccionesPage;\nexport default InstruccionesPage;\nvar _c;\n$RefreshReg$(_c, \"InstruccionesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","InstruccionList","InstruccionForm","jsxDEV","_jsxDEV","InstruccionesPage","_s","instrucciones","setInstrucciones","loading","setLoading","fetchInstrucciones","response","get","data","error","console","handleAddInstruccion","instruccion","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Jdlongart15/ReactProjects/simulador_microprocesador/frontend/src/pages/InstruccionesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport InstruccionList from '../components/InstruccionList';\r\nimport InstruccionForm from '../components/InstruccionForm';\r\n\r\nconst InstruccionesPage: React.FC = () => {\r\n  const [instrucciones, setInstrucciones] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchInstrucciones = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/instrucciones');\r\n        setInstrucciones(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching instrucciones:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInstrucciones();\r\n  }, []);\r\n\r\n  const handleAddInstruccion = async (instruccion: any) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/instrucciones', instruccion);\r\n      setInstrucciones([...instrucciones, response.data]);\r\n    } catch (error) {\r\n      console.error('Error adding instruccion:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Cargando...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Administrar Instrucciones</h1>\r\n      <InstruccionForm onSubmit={handleAddInstruccion} />\r\n      <InstruccionList instrucciones={instrucciones} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstruccionesPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,eAAe,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAQ,EAAE,CAAC;EAC7D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,yCAAyC,CAAC;QAC3EL,gBAAgB,CAACI,QAAQ,CAACE,IAAI,CAAC;QAC/BJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,oBAAoB,GAAG,MAAOC,WAAgB,IAAK;IACvD,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMZ,KAAK,CAACmB,IAAI,CAAC,yCAAyC,EAAED,WAAW,CAAC;MACzFV,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEK,QAAQ,CAACE,IAAI,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,IAAIN,OAAO,EAAE,oBAAOL,OAAA;IAAAgB,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE1C,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCpB,OAAA,CAACF,eAAe;MAACuB,QAAQ,EAAER;IAAqB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDpB,OAAA,CAACH,eAAe;MAACM,aAAa,EAAEA;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCID,iBAA2B;AAAAqB,EAAA,GAA3BrB,iBAA2B;AAuCjC,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}